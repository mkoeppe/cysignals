language: generic

os:
    - linux
    - osx

env:
  matrix:
    - PYTHON_VERSION=2.7 PARI=yes
    - PYTHON_VERSION=3.4 PARI=yes
    - PYTHON_VERSION=3.5 PARI=yes
    - PYTHON_VERSION=3.6 PARI=yes
    - PYTHON_VERSION=3.7 PARI=yes
    - PYTHON_VERSION=2.7 PARI=no
    - PYTHON_VERSION=3.7 PARI=no

install:
    # Install Miniconda.
    - |
      MINICONDA_URL="https://repo.continuum.io/miniconda"
      if [ $TRAVIS_OS_NAME = linux ]; then
          MINICONDA_FILE="Miniconda3-latest-Linux-x86_64.sh"
      elif [ $TRAVIS_OS_NAME = osx ]; then
          MINICONDA_FILE="Miniconda3-latest-MacOSX-x86_64.sh"
      fi
      curl -L -O "${MINICONDA_URL}/${MINICONDA_FILE}"
      bash $MINICONDA_FILE -b

    # Configure conda.
    - source $HOME/miniconda3/bin/activate root
    - conda config --remove channels defaults
    - conda config --add channels defaults
    - conda config --add channels conda-forge
    - conda config --set show_channel_urls true
    - conda config --set always_yes True
    - conda info

    - conda create --name test python=${PYTHON_VERSION}
    - conda activate test
    # We need the toolchain stuff to work around
    # https://github.com/conda/conda/issues/6030
    - if [ "$TRAVIS_OS_NAME" = linux ]; then conda install -y binutils gcc_linux-64 gxx_linux-64; fi
    - conda install -y setuptools pip cython sphinx pari
    # The 'pip' package for Python 3.4 on conda is broken for newer versions
    - if [ "$PYTHON_VERSION" = "3.4" ]; then conda install -y 'pip<20.0'; fi
    # The 'cython' package for Python 3.4 on conda is too old too, but PyPI
    # has a more current version so use pip to install it over the conda
    # package
    - if [ "$PYTHON_VERSION" = "3.4" ]; then pip install 'cython>=0.28,<3.0'; fi
    # The flake8 package on conda is quite broken on Python 2.7 and 3.4;
    # use pip to install it instead.  After support for these older versions
    # dropped we can can go back to the conda package.
    - pip install flake8 twine
    - export LDFLAGS="-L$CONDA_PREFIX/lib"
    - export CFLAGS="-I$CONDA_PREFIX/include"

script:
    - gcc --version
    - g++ --version
    - cython --version
    - make configure
    - ./configure --with-pari=${PARI}
    - make -j4 install
    - make -j4 check-all
    - make -j4 distcheck
    - twine check dist/*
    - flake8 --max-line-length=88 --ignore=E265 src
    - python -c "from cysignals.signals import _pari_version; assert bool(_pari_version()) == ('$PARI' == 'yes')"

deploy:
  provider: releases
  api_key:
    secure: nbhpI3eKptUd6TM7nhl8q7oMRztnBEvQmX9/Xks7bmHa+KRy/ifg1/Jx5a7OMnWgzjJ4lbtEO0NDsg/QTOjBsQSV8mot1/NUgXsuPEVpurqTl1KYk9GgX+7utO/KA5mlbXnGkTpzu0/FYHg7qRigWXe7vDILkhst1MR4RTrfA6KzZSq9UKKyNg7eGwWR4tit5OB0z1Ehe1OvdhOlUMBfDBSC5hbM99bm0/oLYNqUeqqP1cRamvpiLaNMVcRG5PRzR/a0QMEGDhZH5BasjFzZZKPa56+J8N/KdRocxrjzIJEYQORgRDyqRrTPEs4jfwL37kcElPNup4j2iefVZ+61bQWk3r3s98MRxl9vk2uLpI0AgfzUn+fpiKuxJNJ424DffJ1iVJSQsKTihww3whOFuf5ZIQS2KtzcZCUHTkD1rX1aawedQ8IaUMx6XWxE+b0x33BroQ04TooDNmww8Q9md6ZauA+4chUlv8YmXaE4NkRRsCxbrcHna5LEz5vFRcvuG/e6PWM9MFUxTzlqHoxgkawJm+DkGe3qWk5a1zut/tesqvrdM1R23G85T6c+FR2wshS5cKcY6OYpYsD5wRJzd0MRKScTCDhEyODydaFRGKQbf2QizFHqN92QYs+rNK4WjVTmHDsETdKczyRJYfsqsTXnw162UjYtwDT5JPJCOlg=

  file: dist/cysignals-*.tar.gz
  file_glob: true
  skip_cleanup: true
  on:
    repo: sagemath/cysignals
    all_branches: true
    tags: true
